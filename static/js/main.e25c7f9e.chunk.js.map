{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","lineChart","Date","toLocaleDateString","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","CardComponent","cardTitle","cardSubtitle","Grid","item","xs","md","component","Card","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","toDateString","Info","spacing","justify","infected","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e25c7f9e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__17C1c\",\"infected\":\"Cards_infected__1I5e9\",\"recovered\":\"Cards_recovered__alfc8\",\"deaths\":\"Cards_deaths__Co0Z5\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\n// export const fetchDailyData = async () => {\n//   try {\n//     const { data } = await axios.get(`${url}/daily`);\n\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\n// Instead of Global, it fetches the daily data for the US\nexport const fetchDailyData = async () => {\n    try {\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\n  \n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\n    } catch (error) {\n      return error;\n    }\n  };\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport { fetchDailyData } from '../../api';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },  {\n            data: dailyData.map((data) => data.recovered),\n            label: 'Recovered',\n            borderColor: 'green',\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\n\nimport { fetchCountries } from '../../api';\n\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl className={styles.formControl}>\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Card.module.css';\n\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\n    <CardContent>\n      <Typography color=\"textSecondary\" gutterBottom>\n        {cardTitle}\n      </Typography>\n      <Typography variant=\"h5\" component=\"h2\">\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {new Date(lastUpdate).toDateString()}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {cardSubtitle}\n      </Typography>\n    </CardContent>\n  </Grid>\n);\n\nexport default CardComponent;\n","import React from 'react';\nimport { Typography, Grid } from '@material-ui/core';\nimport CardComponent from './Card/Card';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n        <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\n      <Grid container spacing={3} justify=\"center\">\n        <CardComponent\n          className={styles.infected}\n          cardTitle=\"Infected\"\n          value={confirmed.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of active cases from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.recovered}\n          cardTitle=\"Recovered\"\n          value={recovered.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of recoveries from COVID-19.\"\n        />\n        <CardComponent\n          className={styles.deaths}\n          cardTitle=\"Deaths\"\n          value={deaths.value}\n          lastUpdate={lastUpdate}\n          cardSubtitle=\"Number of deaths caused by COVID-19.\"\n        />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\n\nimport { Cards, CountryPicker, Chart } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\n\nimport image from './images/image.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n\n  render() {\n    const { data, country } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} /> \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__XtfnF\",\"image\":\"App_image__3qjRV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3jjc8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1btmy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__VfpXg\"};"],"sourceRoot":""}